definitions:
  genricerror.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  user.User:
    properties:
      age:
        maximum: 100
        minimum: 2
        type: integer
      city:
        maxLength: 100
        minLength: 2
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - email
    - name
    type: object
  userdto.CreateUserRequest:
    description: Create a new user
    properties:
      age:
        example: 30
        maximum: 100
        minimum: 2
        type: integer
      city:
        maxLength: 100
        minLength: 2
        type: string
      email:
        example: yatender@gmail.com
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with provided details
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userdto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
      summary: Delete an existing user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: Update only specific fields of an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User fields to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userdto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
      summary: Partially update an existing user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Replace an existing user's details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User details to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/userdto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/genricerror.ErrorResponse'
      summary: Update an existing user
      tags:
      - Users
swagger: "2.0"
